"""first_commit

Revision ID: 87a5eb90ca59
Revises:
Create Date: 2024-11-10 00:55:21.777845

"""

from typing import Sequence, Union

from alembic import op
from geoalchemy2 import Geography
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from running_app.running.run.adapter.output.persistence.entity.run_entity import (
    UUIDListType,
)

# revision identifiers, used by Alembic.
revision: str = "87a5eb90ca59"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("identifier", sa.Uuid(), nullable=False),
        sa.Column("kakao_id", sa.String(), nullable=False),
        sa.Column("nickname", sa.String(), nullable=False),
        sa.Column("phone", sa.String(), nullable=False),
        sa.Column("gender", sa.String(), nullable=False),
        sa.Column("profile_image_url", sa.String(), nullable=True),
        sa.Column("version_uuid", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("identifier"),
    )
    op.create_index("kakao_id_idx", "user", ["kakao_id"], unique=False)
    op.create_index("phone_idx", "user", ["phone"], unique=False)
    op.create_table(
        "path",
        sa.Column("identifier", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("total_distance", sa.Float(), nullable=False),
        sa.Column("estimated_required_minute", sa.Float(), nullable=False),
        sa.Column("creator_identifier", sa.Uuid(), nullable=False),
        sa.Column("created_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("last_modified_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("version_uuid", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["creator_identifier"],
            ["user.identifier"],
        ),
        sa.PrimaryKeyConstraint("identifier"),
    )
    op.create_table(
        "coordinate",
        sa.Column("identifier", sa.Uuid(), nullable=False),
        sa.Column(
            "location",
            Geography(
                geometry_type="POINT",
                srid=4326,
                from_text="ST_GeogFromText",
                name="geography",
                nullable=False,
            ),
            nullable=False,
        ),
        sa.Column("path_identifier", sa.Uuid(), nullable=False),
        sa.Column("sequence", sa.Integer(), nullable=False),
        sa.Column("version_uuid", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["path_identifier"],
            ["path.identifier"],
        ),
        sa.PrimaryKeyConstraint("identifier"),
    )
    op.create_index(
        "coordinate_path_identifier_sequence_idx",
        "coordinate",
        ["path_identifier", "sequence"],
        unique=False,
    )
    # op.create_index(
    #     "idx_coordinate_location",
    #     "coordinate",
    #     ["location"],
    #     unique=False,
    #     postgresql_using="gist",
    # )
    op.create_table(
        "run",
        sa.Column("identifier", sa.Uuid(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("running_status", sa.String(), nullable=False),
        sa.Column("user_identifier", sa.Uuid(), nullable=True),
        sa.Column("crew_identifier", sa.Uuid(), nullable=True),
        sa.Column("running_user_identifiers", UUIDListType(), nullable=False),
        sa.Column("total_distance", sa.Float(), nullable=False),
        sa.Column("path_identifier", sa.Uuid(), nullable=False),
        sa.Column("created_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("version_uuid", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["path_identifier"],
            ["path.identifier"],
        ),
        sa.PrimaryKeyConstraint("identifier"),
    )
    op.create_index("run_crew_identifier_idx", "run", ["crew_identifier"], unique=False)
    op.create_index("run_user_identifier_idx", "run", ["user_identifier"], unique=False)
    op.create_table(
        "running_state",
        sa.Column("identifier", sa.Uuid(), nullable=False),
        sa.Column("run_identifier", sa.Uuid(), nullable=False),
        sa.Column("runner_identifier", sa.Uuid(), nullable=False),
        sa.Column("time", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "location",
            Geography(
                geometry_type="POINT",
                srid=4326,
                from_text="ST_GeogFromText",
                name="geography",
                nullable=False,
            ),
            nullable=False,
        ),
        sa.Column("speed", sa.Float(), nullable=False),
        sa.Column("version_uuid", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["run_identifier"],
            ["run.identifier"],
        ),
        sa.ForeignKeyConstraint(
            ["runner_identifier"],
            ["user.identifier"],
        ),
        sa.PrimaryKeyConstraint("identifier"),
    )
    #

    op.create_index(
        "running_state_run_identifier_idx",
        "running_state",
        ["run_identifier"],
        unique=False,
    )
    op.create_index(
        "running_state_run_identifier_runner_identifier_idx",
        "running_state",
        ["run_identifier", "runner_identifier"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "running_state_run_identifier_runner_identifier_idx", table_name="running_state"
    )
    op.drop_index("running_state_run_identifier_idx", table_name="running_state")
    op.drop_index(
        "idx_running_state_location",
        table_name="running_state",
        postgresql_using="gist",
    )
    op.drop_table("running_state")
    op.drop_index("run_user_identifier_idx", table_name="run")
    op.drop_index("run_crew_identifier_idx", table_name="run")
    op.drop_table("run")
    op.drop_index(
        "idx_coordinate_location", table_name="coordinate", postgresql_using="gist"
    )
    op.drop_index("coordinate_path_identifier_sequence_idx", table_name="coordinate")
    op.drop_table("coordinate")
    op.drop_table("path")
    op.drop_index("phone_idx", table_name="user")
    op.drop_index("kakao_id_idx", table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
